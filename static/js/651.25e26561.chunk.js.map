{"version":3,"file":"static/js/651.25e26561.chunk.js","mappings":"gRAGaA,EAAgBC,EAAAA,GAAAA,GAAAA,WAAH,yEAAGA,CAAH,2EAEb,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAM,EAArB,IAKAC,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAV,mFAAGL,CAAH,wHAEd,SAACC,GAAD,OAAOA,EAAEC,MAAMI,OAAOC,IAAtB,IASE,SAACN,GAAD,OAAOA,EAAEC,MAAMI,OAAOE,SAAtB,ICnBAC,EAAQT,EAAAA,GAAAA,MAAAA,WAAH,wEAAGA,CAAH,8EAEC,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAM,EAArB,IAEJ,SAACF,GAAD,OAAOA,EAAEC,MAAMQ,UAAUC,CAAzB,IAGFC,EAASZ,EAAAA,GAAAA,IAAAA,WAAH,yEAAGA,CAAH,uCACA,SAACC,GAAD,OAAOA,EAAEC,MAAMW,QAAQ,EAAvB,IACN,SAACZ,GAAD,OAAOA,EAAEC,MAAMC,MAAM,EAArB,IAGAW,EAAQd,EAAAA,GAAAA,MAAAA,WAAH,wEAAGA,CAAH,uCAEH,SAACC,GAAD,OAAOA,EAAEC,MAAMC,MAAM,EAArB,I,SCEf,EAhBwB,SAAC,GAA6B,IAA3BY,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACvC,OACE,SAAC,EAAD,WACE,UAAC,EAAD,+BAEE,SAAC,EAAD,CACEC,KAAK,OACLD,MAAOA,EACPE,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAOL,EAAaK,EAAEC,OAAOL,MAA7B,QAKnB,E,SC0BD,EApCkB,WAAO,IAAD,EACtB,GAAkCM,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKV,EACrB,GAAE,IAEH,IAAMW,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,cAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAWc,QAAO,SAACC,GAAD,OACvBA,EAASC,KAAKC,cAAcC,SAASX,EAAYU,cAD1B,GAG1B,GAAE,CAACjB,EAAWO,IAMf,OACE,6BACE,SAAC,EAAD,CAAiBf,aANA,SAACC,GACpBW,EAA0B,KAAVX,EAAe,CAAEqB,OAAQrB,GAAU,CAAC,EACrD,EAIgDA,MAAOc,IACnDK,IACC,SAAC,EAAD,UACGA,EAAiBO,KAAI,gBAAGH,EAAH,EAAGA,KAAMI,EAAT,EAASA,GAAT,OACpB,SAAC,EAAD,CAAgBC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMlB,GAA5C,SACGW,GAD0DI,EADzC,QAS/B,C","sources":["pages/Customers/Customers.styled.js","components/FilterCustomers/FilterCustomers.styled.js","components/FilterCustomers/FilterCustomers.js","pages/Customers/Customers.js"],"sourcesContent":["import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nexport const CustomersList = styled.ul`\n  display: flex;\n  padding: ${(p) => p.theme.space[1]}rem;\n  font-size: 1.6rem;\n  flex-flow: column nowrap;\n`;\n\nexport const CustomerLink = styled(Link)`\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.text};\n  transition: color 150ms ease-in-out;\n\n  & + & {\n    margin-top: 1rem;\n  }\n\n  :hover,\n  :focus {\n    color: ${(p) => p.theme.colors.secondary};\n  }\n`;\n","import styled from 'styled-components/macro';\n\nexport const Label = styled.label`\n  display: flex;\n  margin-bottom: ${(p) => p.theme.space[1]}rem;\n  flex-flow: column nowrap;\n  font-size: ${(p) => p.theme.fontSizes.l};\n`;\n\nexport const Filter = styled.div`\n  border-bottom: ${(p) => p.theme.borders[1]};\n  padding: ${(p) => p.theme.space[1]}rem;\n`;\n\nexport const Input = styled.input`\n  margin-top: 1rem;\n  max-width: ${(p) => p.theme.space[6]}rem;\n`;\n","import * as S from './FilterCustomers.styled';\n\nconst FilterCustomers = ({ handleFilter, value }) => {\n  return (\n    <S.Filter>\n      <S.Label>\n        Filter customers\n        <S.Input\n          type='text'\n          value={value}\n          placeholder=\"Client's name\"\n          onChange={(e) => handleFilter(e.target.value)}\n        />\n      </S.Label>\n    </S.Filter>\n  );\n};\n\nexport default FilterCustomers;\n","import { useEffect, useMemo, useState } from 'react';\nimport { getCustomers } from '../../fakeAPI';\nimport * as S from './Customers.styled';\nimport FilterCustomers from '../../components/FilterCustomers/FilterCustomers';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const filterParam = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, []);\n\n  const visibleCustomers = useMemo(() => {\n    return customers?.filter((customer) =>\n      customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [customers, filterParam]);\n\n  const changeFilter = (value) => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  return (\n    <main>\n      <FilterCustomers handleFilter={changeFilter} value={filterParam} />\n      {visibleCustomers && (\n        <S.CustomersList>\n          {visibleCustomers.map(({ name, id }) => (\n            <S.CustomerLink to={`${id}`} state={{ from: location }} key={id}>\n              {name}\n            </S.CustomerLink>\n          ))}\n        </S.CustomersList>\n      )}\n    </main>\n  );\n};\n\nexport default Customers;\n"],"names":["CustomersList","styled","p","theme","space","CustomerLink","Link","colors","text","secondary","Label","fontSizes","l","Filter","borders","Input","handleFilter","value","type","placeholder","onChange","e","target","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","location","useLocation","filterParam","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","map","id","to","state","from"],"sourceRoot":""}